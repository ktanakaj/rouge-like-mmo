- block:
  - name: Copy the web app configuration to nginx
    template:
      src: "{{ app_nginx_conf_src }}"
      dest: "{{ app_nginx_conf_dest }}"
      force: yes
    notify: Restart nginx

  - name: Create the web application logging directory
    file: path={{ app_log_dir }} state=directory owner=vagrant group=vagrant mode=0755
  - name: Create the web application database
    mysql_db: name={{ item }} encoding=utf8 state=present
    with_items: "{{ app_db }}"
    register: app_db_created
  - name: Craete the web application db user
    mysql_user: name={{ item[1].user }} password={{ item[1].password }} host={{ item[0] }} priv={{ item[1].privilege }} state=present append_privs=yes
    with_nested:
      - [ 'localhost', '%' ]
      - "{{ app_db_users }}"
    when: app_db_created.changed

  - name: Install "node-pre-gyp" node.js package globally for sqlite3
    npm: name=node-pre-gyp global=yes

  - name: Open port 4200 for angular-cli only internal zone
    firewalld: port=4200/tcp permanent=true state=enabled zone=internal
    notify: Restart firewalld
  - name: Open port 9876 for angular-cli only internal zone
    firewalld: port=9876/tcp permanent=true state=enabled zone=internal
    notify: Restart firewalld

- block:
  - name: Install node.js package for the server application
    shell: yarn install chdir={{ app_svr_dir }} --no-bin-links
    retries: 2
  - name: Install node.js package for the client application
    shell: yarn install chdir={{ app_web_dir }} --no-bin-links
    retries: 2
  - name: Build the server application
    shell: npm run build chdir={{ app_svr_dir }}
  - name: Build the client application
    shell: npm run build chdir={{ app_web_dir }}
  - name: Create the web application db tables
    shell: npm run db-migrate chdir={{ app_svr_dir }}
  - name: Import the test master data
    shell: npm run master-import -- {{ app_svr_dir }}/test --publish chdir={{ app_svr_dir }}
  - name: Register the web application to pm2
    shell: npm start chdir={{ app_svr_dir }}
  - name: Save pm2 current processes
    shell: pm2 save
  become: false
