---
  session:
    secret: "htsrhshsghgyjfdgdgre"
    resave: false
    saveUninitialized: false
    cookie:
  databases:
    master:
      dialect: "mysql"
      host: "localhost"
      port: 3306
      username: "rougelikemmo_usr"
      password: "rougeL!kemmo01"
      database: "rougelikemmo_master_db"
      benchmark: true
    admin:
      dialect: "mysql"
      host: "localhost"
      port: 3306
      username: "rougelikemmo_usr"
      password: "rougeL!kemmo01"
      database: "rougelikemmo_admin_db"
      benchmark: true
    global:
      dialect: "mysql"
      host: "localhost"
      port: 3306
      username: "rougelikemmo_usr"
      password: "rougeL!kemmo01"
      database: "rougelikemmo_global_db"
      benchmark: true
    shardable:
      # ※ shardableだけSequelizeの設定を拡張しているので注意
      benchmark: true
      databases: # ※ DBの順番や数を変えるとシャードキーの計算が変わります
        - dialect: "mysql"
          host: "localhost"
          port: 3306
          username: "rougelikemmo_usr"
          password: "rougeL!kemmo01"
          database: "rougelikemmo_shardable_db1"
        - dialect: "mysql"
          host: "localhost"
          port: 3306
          username: "rougelikemmo_usr"
          password: "rougeL!kemmo01"
          database: "rougelikemmo_shardable_db2"
  redis:
    # ※ sessionだけ使用法が別でフォーマットが異なるので注意
    session:
      host: "127.0.0.1"
      port: 6379
      db: 1
    redis:
      host: "127.0.0.1"
      port: 6379
      options:
        db: 2
    cache:
      host: "127.0.0.1"
      port: 6379
      options:
        db: 3
  password:
    algorithm: "sha256"
  log4js:
    pm2: true
    appenders:
      stdout: # 標準出力
        type: "console"
      stderr: # 標準エラー出力
        type: "stderr"
      access: # アクセスログ
        type: "dateFile"
        filename: "/var/log/local/rouge-like-mmo/access.log"
        pattern: "-yyyy-MM-dd"
        backups: 10
      ws: # WebSocket通信ログ
        type: "dateFile"
        filename: "/var/log/local/rouge-like-mmo/ws.log"
        pattern: "-yyyy-MM-dd"
        backups: 10
      batch: # バッチログ
        type: "dateFile"
        filename: "/var/log/local/rouge-like-mmo/batch.log"
        pattern: "-yyyy-MM-dd"
        maxLogSize: 107374182400 # 100MB
      error: # エラーログ
        type: "dateFile"
        filename: "/var/log/local/rouge-like-mmo/error.log"
        pattern: "-yyyy-MM-dd"
        maxLogSize: 107374182400 # 100MB
      debug: # デバッグログ
        type: "file"
        filename: "/var/log/local/rouge-like-mmo/debug.log"
        backups: 10
        maxLogSize: 10737418240 # 10MB
    categories:
      default:
        appenders:
          - "stdout"
          - "debug"
        level: "debug"
      access:
        appenders:
          - "stdout"
          - "access"
        level: "info"
      ws:
        appenders:
          - "stdout"
          - "ws"
        level: "info"
      batch:
        appenders:
          - "stdout"
          - "batch"
        level: "info"
      error:
        appenders:
          - "stderr"
          - "error"
        level: "debug"
  noaccesslog:
    - \.css
    - \.js
    - \.png
    - \.jpg
    - \.gif
    - \.ico
    - \.jsgz
    - \.datagz
    - \.memgz
  swagger:
    swagger: "2.0"
    info:
      title: "Rouge-like MMO server"
      version: 0.0.1
      description: "ローグライクなMMOブラウザゲームサーバーAPI。"
    consumes:
      - "application/json"
    produces:
      - "application/json"
    securityDefinitions:
      SessionId:
        type: apiKey
        in: header
        name: Cookie
        description: セッションID
  debug:
    errorMessage: true # エラーメッセージを出力する場合true
    apidocs: true # APIページを有効にするか
    bodyLog: true # リクエスト/レスポンスボディをログ出力する場合true
    redisLog: true # Redisコマンドログ出力する場合true
